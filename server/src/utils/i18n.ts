import { Translation, GetTranslationParams } from './types'

const translations: Record<string, Translation> = {
   en: {
      welcome: '<b>Welcome!</b> <i>Open the WebApp to start.</i>',
      subscribed: 'You have subscribed to the channel! Bonus: {bonus} {currency}',
      error: 'An error occurred. Please try again.',
      createAccount: 'CREATE AN ACCOUNT',
      next: 'Next',
      subscribeToCommunities: 'subscribe to communities',
      home: 'Home',
      bonus: 'Bonus',
      money: 'Money',
      rateVideosTitle: 'Rate videos and earn real money',
      rateVideosDesc: 'Companies pay for each video you watch and rate to help determine the most popular content.',
      howToEarn: 'How to earn more? ‚Ä¢ all this in the channel üî•‚Äçüî•‚Äçüî•',
      withdraw: 'Withdraw',
      videoLimitTitle: 'Daily video limit reached',
      videoLimitDesc: 'You have watched the maximum number of videos for today. Come back tomorrow to continue earning (videos are refreshed ',
      videoLimitRefresh: 'every 24 hours',
      videoLimitDescEnd: ').',
      continue: 'Continue',
      bonusGift: 'Bonus Gift',
      toBalance: 'to balance',
      bonusValue: '+$100',
      claimGift: 'Claim gift',
      pleaseIndicateCard: 'Please indicate your card number',
      card: 'Card',
      orUseIban: 'Or use your IBAN account',
      iban: 'IBAN',
      ibanPlaceholder: 'from 15 to 34 characters',
      amountToWithdraw: 'Amount to withdraw',
      amount: 'Amount',
      sum: 'Sum',
      noSponsorSubscription: 'You dont have a sponsor subscription',
      subscribeAndTry: 'Subscribe and try again',
      alreadyGetBonus: 'You already get bonus',
      thanks: 'Thanks',
      giftClaimed: 'Gift claimed!',
      youReceived: 'You received +{amount}{currency}',
      serverError: 'Server error',
      bonusNotReceived: 'Bonus not received',
      invite: 'Invite',
      promocodeError: 'Promocode error',
      promocodeNotFound: 'Promocode is not found!',
      secretBonus: 'Secret bonus',
      activatedCodes: 'Activated codes: {count}',
      subscribeToChannel: 'Subscribe to the channel',
      followNews: 'Follow the news in the channel and get bonuses to your balance',
      linkCopied: 'Link copied to clipboard!',
      shareMenuOpened: 'Share menu opened!',
      linkCopyError: 'Error copying link',
      linkShareError: 'Error sharing or copying link.',
      currency: '$',
      openWebAppButton: 'Open WebApp',
      // Registration
      registrationRequired: 'Registration is required to continue so we can better collect data on ratings',
      pleaseIndicateGender: 'Please indicate your gender',
      male: 'Male',
      female: 'Female',
      other: 'Other',
      pleaseIndicateAge: 'Please indicate your age',
      age: 'Age',
      ageRange: 'from 16 to 100 years',
      specifyAge: 'Please specify your age (from 16 to 100)',
      specifyGender: 'Please also specify your gender.',
      // Video rating
      rateVideo: 'Rate video',
      // Profile
      yourProfile: 'Your profile',
      accountNotVerified: 'Account not verified',
      dateOfRegistration: 'Date of registration',
      friendsInvited: 'Friends invited',
      likes: 'Likes',
      dislikes: 'Dislikes',
      earnings: 'Earnings',
      passVerification: 'Pass verification',
      share: 'Share',
      // Referral system
      referralSystemBonus: 'REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS REFERAL SYSTEM BONUS',
      promocode: 'Promo code...',
      friendsList: 'Friends list',
      invitedFriends: 'Invited friends: {count}',
      reload: 'Reload',
      copyInvitationLink: 'Copy invitation link',
      copy: 'Copy',
      inviteFriendsEarn: 'Invite your friends and start earning! Share your link or send a direct invitation ‚Äî get {currency}100 for each friend you bring. Start earning today!',
      inviteFriendsBonus: 'Invite friends to receive a bonus',
      invitedFriendsAppear: 'All invited friends will appear in this list',
      // Withdrawal
      insufficientFunds: 'Insufficient Funds',
      minimumWithdrawalLimit: 'The minimum withdrawal limit is {currency}{amount}. Keep earning by watching and rating videos',
      continueWorking: 'Continue working',
      // Gift toast messages
      giftToast: {
         noSubscriptionTitle: 'No subscription',
         noSubscriptionDescription: 'Subscribe to the channel to get a gift',
         alreadyBonusTitle: 'Bonus already received',
         alreadyBonusDescription: 'You have already received the bonus gift',
         giftClaimedTitle: 'Gift claimed!',
         giftClaimedDescription: 'You received +{amount} {currency}',
         serverErrorTitle: 'Server error',
         serverErrorDescription: 'Failed to claim gift. Please try again.'
      }
   },
   ru: {
      // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTML/Markdown-—Ç–µ–≥–∏ Telegram –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      welcome: '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b> <i>–û—Ç–∫—Ä–æ–π—Ç–µ WebApp, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.</i>',
      subscribed: '–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª! –ë–æ–Ω—É—Å: {bonus} {currency}',
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
      createAccount: '–°–û–ó–î–ê–¢–¨ –ê–ö–ö–ê–£–ù–¢',
      next: '–î–∞–ª–µ–µ',
      subscribeToCommunities: '–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
      home: '–ì–ª–∞–≤–Ω–∞—è',
      bonus: '–ë–æ–Ω—É—Å',
      money: '–î–µ–Ω—å–≥–∏',
      rateVideosTitle: '–û—Ü–µ–Ω–∏–≤–∞–π –≤–∏–¥–µ–æ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏',
      rateVideosDesc: '–ö–æ–º–ø–∞–Ω–∏–∏ –ø–ª–∞—Ç—è—Ç –∑–∞ –∫–∞–∂–¥–æ–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–µ –∏ –æ—Ü–µ–Ω—ë–Ω–Ω–æ–µ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç.',
      howToEarn: '–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ? ‚Ä¢ –≤—Å—ë –≤ –∫–∞–Ω–∞–ª–µ üî•‚Äçüî•‚Äçüî•',
      withdraw: '–í—ã–≤–µ—Å—Ç–∏',
      videoLimitTitle: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –≤–∏–¥–µ–æ',
      videoLimitDesc: '–í—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –ó–∞–π–¥–∏—Ç–µ –∑–∞–≤—Ç—Ä–∞, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å (–≤–∏–¥–µ–æ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è ',
      videoLimitRefresh: '–∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞',
      videoLimitDescEnd: ').',
      continue: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
      bonusGift: '–ë–æ–Ω—É—Å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫',
      toBalance: '–Ω–∞ –±–∞–ª–∞–Ω—Å',
      bonusValue: '+100‚ÇΩ',
      claimGift: '–ó–∞–±—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫',
      pleaseIndicateCard: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã',
      card: '–ö–∞—Ä—Ç–∞',
      orUseIban: '–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ IBAN —Å—á—ë—Ç',
      iban: 'IBAN',
      ibanPlaceholder: '–æ—Ç 15 –¥–æ 34 —Å–∏–º–≤–æ–ª–æ–≤',
      amountToWithdraw: '–°—É–º–º–∞ –∫ –≤—ã–≤–æ–¥—É',
      amount: '–°—É–º–º–∞',
      sum: '–°—É–º–º–∞',
      noSponsorSubscription: '–£ –≤–∞—Å –Ω–µ—Ç —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏',
      subscribeAndTry: '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
      alreadyGetBonus: '–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å',
      thanks: '–°–ø–∞—Å–∏–±–æ',
      giftClaimed: '–ü–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω!',
      youReceived: '–í—ã –ø–æ–ª—É—á–∏–ª–∏ +{amount}{currency}',
      serverError: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      bonusNotReceived: '–ë–æ–Ω—É—Å –Ω–µ –ø–æ–ª—É—á–µ–Ω',
      invite: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å',
      promocodeError: '–û—à–∏–±–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞',
      promocodeNotFound: '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!',
      secretBonus: '–°–µ–∫—Ä–µ—Ç–Ω—ã–π –±–æ–Ω—É—Å',
      activatedCodes: '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–¥–æ–≤: {count}',
      subscribeToChannel: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª',
      followNews: '–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ –∫–∞–Ω–∞–ª–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –Ω–∞ –±–∞–ª–∞–Ω—Å',
      linkCopied: '–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!',
      shareMenuOpened: '–ú–µ–Ω—é —à–∞—Ä–∏–Ω–≥–∞ –æ—Ç–∫—Ä—ã—Ç–æ!',
      linkCopyError: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏',
      linkShareError: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Å—ã–ª–∫–∏.',
      currency: '‚ÇΩ',
      openWebAppButton: '–û—Ç–∫—Ä—ã—Ç—å WebApp',
      // Registration
      registrationRequired: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ —Å–æ–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö',
      pleaseIndicateGender: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª',
      male: '–ú—É–∂—Å–∫–æ–π',
      female: '–ñ–µ–Ω—Å–∫–∏–π',
      other: '–î—Ä—É–≥–æ–π',
      pleaseIndicateAge: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç',
      age: '–í–æ–∑—Ä–∞—Å—Ç',
      ageRange: '–æ—Ç 16 –¥–æ 100 –ª–µ—Ç',
      specifyAge: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–æ—Ç 16 –¥–æ 100)',
      specifyGender: '–¢–∞–∫–∂–µ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª.',
      // Video rating
      rateVideo: '–û—Ü–µ–Ω–∏—Ç—å –≤–∏–¥–µ–æ',
      // Profile
      yourProfile: '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å',
      accountNotVerified: '–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω',
      dateOfRegistration: '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
      friendsInvited: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π',
      likes: '–õ–∞–π–∫–∏',
      dislikes: '–î–∏–∑–ª–∞–π–∫–∏',
      earnings: '–ó–∞—Ä–∞–±–æ—Ç–æ–∫',
      passVerification: '–ü—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é',
      share: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è',
      // Referral system
      referralSystemBonus: '–†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–° –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–û–ù–£–°',
      promocode: '–ü—Ä–æ–º–æ–∫–æ–¥...',
      friendsList: '–°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π',
      invitedFriends: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {count}',
      reload: '–û–±–Ω–æ–≤–∏—Ç—å',
      copyInvitationLink: '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
      copy: '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å',
      inviteFriendsEarn: '–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å! –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä—è–º–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ ‚Äî –ø–æ–ª—É—á–∏—Ç–µ {currency}100 –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞. –ù–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!',
      inviteFriendsBonus: '–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å',
      invitedFriendsAppear: '–í—Å–µ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ –¥—Ä—É–∑—å—è –ø–æ—è–≤—è—Ç—Å—è –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ',
      // Withdrawal
      insufficientFunds: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤',
      minimumWithdrawalLimit: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –≤—ã–≤–æ–¥–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {currency}{amount}. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –∏ –æ—Ü–µ–Ω–∏–≤–∞—è –≤–∏–¥–µ–æ',
      continueWorking: '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É',
      // Gift toast messages
      giftToast: {
         noSubscriptionTitle: '–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏',
         noSubscriptionDescription: '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫',
         alreadyBonusTitle: '–ë–æ–Ω—É—Å —É–∂–µ –ø–æ–ª—É—á–µ–Ω',
         alreadyBonusDescription: '–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫',
         giftClaimedTitle: '–ü–æ–¥–∞—Ä–æ–∫ –ø–æ–ª—É—á–µ–Ω!',
         giftClaimedDescription: '–í—ã –ø–æ–ª—É—á–∏–ª–∏ +{amount} {currency}',
         serverErrorTitle: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
         serverErrorDescription: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
      }
   }
}

export function getTranslation(
   languageCode: string | undefined,
   key: keyof Translation,
   params: GetTranslationParams = {}
) {
   const code = languageCode?.toLowerCase()
   const lang = code && translations[code] ? code : 'en'
   const raw = translations[lang][key] || translations.en[key] || key
   if (typeof raw === 'string') {
      let text = raw;
   Object.entries(params).forEach(([k, v]) => {
      text = text.replace(`{${k}}`, v.toString())
   })
   return text
   }
   return ''
}

export { translations }
